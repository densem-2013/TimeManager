// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Infocom.TimeManager.WebAccess.Controllers {
    public partial class ProjectsOverviewController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProjectsOverviewController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ProjectsOverviewController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ProjectUpdate() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ProjectUpdate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ProjectInsert() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ProjectInsert);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ProjectDelete() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ProjectDelete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetRequests() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetRequests);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetPhaseShortModel() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetPhaseShortModel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetPhaseShortModelForNameList() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetPhaseShortModelForNameList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SearchWord() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SearchWord);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProjectsOverviewController Actions { get { return MVC.ProjectsOverview; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "ProjectsOverview";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string ProjectUpdate = "ProjectUpdate";
            public readonly string ProjectInsert = "ProjectInsert";
            public readonly string ProjectDelete = "ProjectDelete";
            public readonly string GetNewRequests = "GetNewRequests";
            public readonly string GetRequests = "GetRequests";
            public readonly string GetPhaseShortModel = "GetPhaseShortModel";
            public readonly string GetPhaseShortModelForNameList = "GetPhaseShortModelForNameList";
            public readonly string SearchWord = "SearchWord";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Index = "~/Views/ProjectsOverview/Index.aspx";
            public readonly string ToolBarTemplate = "~/Views/ProjectsOverview/ToolBarTemplate.ascx";
            static readonly _DisplayTemplates s_DisplayTemplates = new _DisplayTemplates();
            public _DisplayTemplates DisplayTemplates { get { return s_DisplayTemplates; } }
            public partial class _DisplayTemplates{
            }
            static readonly _EditorTemplates s_EditorTemplates = new _EditorTemplates();
            public _EditorTemplates EditorTemplates { get { return s_EditorTemplates; } }
            public partial class _EditorTemplates{
                public readonly string ProjectsEditor = "ProjectsEditor";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ProjectsOverviewController: Infocom.TimeManager.WebAccess.Controllers.ProjectsOverviewController {
        public T4MVC_ProjectsOverviewController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Index(long filteringByProjectTypeID, string filteringByAssignedProjects, string filteringBySearchWord, long filteringByStatusID) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("filteringByProjectTypeID", filteringByProjectTypeID);
            callInfo.RouteValueDictionary.Add("filteringByAssignedProjects", filteringByAssignedProjects);
            callInfo.RouteValueDictionary.Add("filteringBySearchWord", filteringBySearchWord);
            callInfo.RouteValueDictionary.Add("filteringByStatusID", filteringByStatusID);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ProjectUpdate(Infocom.TimeManager.WebAccess.Models.ProjectModel projectModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ProjectUpdate);
            callInfo.RouteValueDictionary.Add("projectModel", projectModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ProjectInsert(Infocom.TimeManager.WebAccess.Models.ProjectModel projectModel) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ProjectInsert);
            callInfo.RouteValueDictionary.Add("projectModel", projectModel);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ProjectDelete(long id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ProjectDelete);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetNewRequests() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetNewRequests);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetRequests(string variant) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetRequests);
            callInfo.RouteValueDictionary.Add("variant", variant);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetPhaseShortModel(long requestID) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetPhaseShortModel);
            callInfo.RouteValueDictionary.Add("requestID", requestID);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetPhaseShortModelForNameList(long requestID) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetPhaseShortModelForNameList);
            callInfo.RouteValueDictionary.Add("requestID", requestID);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SearchWord(string searchWord) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SearchWord);
            callInfo.RouteValueDictionary.Add("searchWord", searchWord);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
